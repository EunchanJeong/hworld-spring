<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
* 콘테스트 Mybatis mapper xml
* @author 정은찬
* @since 2024.08.31
* @version 1.0
*
* <pre>
* 수정일        	수정자        수정내용
* ==========  =========    ======================================================
* 2024.08.31  	정은찬        최초 생성
* 2024.09.01  	정은찬        콘테스트 게시글 목록 조회 query parameter 적용, 게시글 상세 조회, 게시글 코디 착용 아이템 조회 추가
* </pre>
-->

<mapper namespace="com.oasis.hworld.contest.mapper.ContestMapper">
    <!-- 콘테스트 게시글 목록 조회 -->
    <select id="selectContestPostList">
        SELECT
            P.post_id,
            CO.image_url,
            P.like_count,
            COUNT(R.reply_id) AS reply_count
        FROM
            POST P
        LEFT JOIN
            CONTEST C
            ON
                P.contest_id = C.contest_id
        LEFT JOIN
            MEMBER M
            ON
                P.member_id = M.member_id
        LEFT JOIN
            COORDINATION CO
            ON
                P.coordination_id = CO.coordination_id
        LEFT JOIN
            REPLY R
            ON
                P.post_id = R.post_id
        WHERE
            <if test="contestStatus == 'ongoing'">
                TO_DATE(#{date}, 'YYYY-MM-DD') BETWEEN C.start_date AND C.end_date
            </if>
            <if test="contestStatus == 'finished'">
                C.end_date &lt; TO_DATE(#{date}, 'YYYY-MM-DD')
            </if>
        GROUP BY
            P.post_id,
            CO.image_url,
            P.like_count
        <choose>
            <when test="sortBy == 'latest'">
                ORDER BY MAX(P.created_at) DESC
            </when>
            <when test="sortBy == 'recommend'">
                ORDER BY P.like_count DESC
            </when>
        </choose>
    </select>

    <!-- PostDetailDTO, ReplyDTO, ItemDTO 간의 매핑을 정의하는 ResultMap -->
    <resultMap id="PostDetailResultMap" type="com.oasis.hworld.contest.dto.PostDetailResponseDTO">
        <id column="post_id" property="postId"/>
        <result column="title" property="title"/>
        <result column="post_created_at" property="createdAt"/>
        <result column="image_url" property="imageUrl"/>
        <result column="post_nickname" property="nickname"/>
        <result column="like_count" property="likeCount"/>
        <collection property="itemList"
                    ofType="com.oasis.hworld.contest.dto.ItemDTO"
                    javaType="ArrayList">
            <result column="item_id" property="itemId"/>
            <result column="item_name" property="itemName"/>
            <result column="shop_name" property="shopName"/>
            <result column="item_image_url" property="itemImageUrl"/>
            <result column="item_type" property="itemType"/>
        </collection>
        <collection property="replyList"
                    ofType="com.oasis.hworld.contest.dto.ReplyDTO"
                    javaType="ArrayList">
            <result column="reply_content" property="content"/>
            <result column="reply_nickname" property="nickname"/>
            <result column="reply_created_at" property="createdAt"/>
        </collection>
    </resultMap>

    <!-- 게시글 ID를 통해 게시글 상세 조회   -->
    <select id="selectContestPostDetailByPostId" resultMap="PostDetailResultMap">
        SELECT
            P.post_id,
            P.title,
            TO_CHAR(P.created_at, 'YYYY-MM-DD') AS post_created_at,
            CO.image_url,
            M.nickname AS post_nickname,
            P.like_count,
            I.item_id,
            I.name AS item_name,
            S.name AS shop_name,
            I.image_url AS item_image_url,
            CASE
                WHEN I.item_id = CO.glasses_id THEN '안경'
                WHEN I.item_id = CO.cap_id THEN '모자'
                WHEN I.item_id = CO.bag_id THEN '가방'
                WHEN I.item_id = CO.necklace_id THEN '목걸이'
                END AS item_type,
            R.content AS reply_content,
            RM.nickname AS reply_nickname,
            TO_CHAR(R.created_at, 'YYYY-MM-DD') AS reply_created_at
        FROM
            POST P
        LEFT JOIN
            MEMBER M
            ON
                P.member_id = M.member_id
        LEFT JOIN
            COORDINATION CO
            ON
                P.coordination_id = CO.coordination_id
        LEFT JOIN
            REPLY R
            ON
                P.post_id = R.post_id
        LEFT JOIN
            MEMBER RM
            ON
                R.member_id = RM.member_id
        LEFT JOIN
            ITEM I
            ON
                I.item_id IN (CO.glasses_id, CO.cap_id, CO.bag_id, CO.necklace_id)
        LEFT JOIN
            SHOP S
            ON
                I.shop_id = S.shop_id
        WHERE
            P.post_id = #{postId}
        ORDER BY
            R.created_at DESC
    </select>
</mapper>