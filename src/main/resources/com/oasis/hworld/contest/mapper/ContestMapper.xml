<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
* 콘테스트 Mybatis mapper xml
* @author 정은찬
* @since 2024.08.31
* @version 1.0
*
* <pre>
* 수정일        	수정자        수정내용
* ==========  =========    ======================================================
* 2024.08.31  	정은찬        최초 생성
* 2024.09.01  	정은찬        콘테스트 게시글 목록 조회 query parameter 적용, 게시글 상세 조회, 게시글 코디 착용 아이템 조회 추가
* 2024.09.02    정은찬        회원 ID를 통한 코디 목록 조회, 진행중인 콘테스트 게시글 등록, 댓글 등록/삭제, 게시글 추천 조회 추가
* 2024.09.03    정은찬        콘테스트 게시글 추천 등록 및 추천수 업데이트, 댓글수 업데이트(증가/삭제) 추가
* </pre>
-->

<mapper namespace="com.oasis.hworld.contest.mapper.ContestMapper">
    <!-- 콘테스트 게시글 목록 조회 -->
    <select id="selectContestPostList">
        SELECT
            P.post_id,
            CO.image_url,
            P.recommend_count,
            P.reply_count
        FROM
            POST P
        LEFT JOIN
            CONTEST C
            ON
                P.contest_id = C.contest_id
        LEFT JOIN
            MEMBER M
            ON
                P.member_id = M.member_id
        LEFT JOIN
            COORDINATION CO
            ON
                P.coordination_id = CO.coordination_id
        WHERE
            P.deleted_at IS NULL
          AND
            <if test="contestStatus == 'ongoing'">
                TO_DATE(#{date}, 'YYYY-MM-DD') BETWEEN C.start_date AND C.end_date
            </if>
            <if test="contestStatus == 'finished'">
                C.end_date &lt; TO_DATE(#{date}, 'YYYY-MM-DD')
            </if>
        <choose>
            <when test="sortBy == 'latest'">
                ORDER BY MAX(P.created_at) DESC
            </when>
            <when test="sortBy == 'recommend'">
                ORDER BY P.recommend_count DESC
            </when>
        </choose>
    </select>

    <!-- PostDetailResponseDTO, ReplyDTO, ItemDTO 간의 매핑을 정의하는 ResultMap -->
    <resultMap id="PostDetailResultMap" type="com.oasis.hworld.contest.dto.PostDetailResponseDTO">
        <id column="post_id" property="postId"/>
        <result column="title" property="title"/>
        <result column="post_created_at" property="createdAt"/>
        <result column="image_url" property="imageUrl"/>
        <result column="post_nickname" property="nickname"/>
        <result column="recommend_count" property="recommendCount"/>
        <collection property="itemList"
                    ofType="com.oasis.hworld.contest.dto.ItemDTO"
                    javaType="ArrayList">
            <result column="item_id" property="itemId"/>
            <result column="item_name" property="itemName"/>
            <result column="shop_name" property="shopName"/>
            <result column="item_image_url" property="itemImageUrl"/>
            <result column="item_type" property="itemType"/>
        </collection>
        <collection property="replyList"
                    ofType="com.oasis.hworld.contest.dto.ReplyDTO"
                    javaType="ArrayList">
            <result column="reply_content" property="content"/>
            <result column="reply_nickname" property="nickname"/>
            <result column="reply_created_at" property="createdAt"/>
        </collection>
    </resultMap>

    <!-- 게시글 ID를 통한 게시글 상세 조회   -->
    <select id="selectContestPostDetailByPostId" resultMap="PostDetailResultMap">
        SELECT
            P.post_id,
            P.title,
            TO_CHAR(P.created_at, 'YYYY-MM-DD') AS post_created_at,
            CO.image_url,
            M.nickname AS post_nickname,
            P.recommend_count,
            I.item_id,
            I.name AS item_name,
            S.name AS shop_name,
            I.image_url AS item_image_url,
            CASE
                WHEN I.category_id = 1 THEN '모자'
                WHEN I.category_id = 2 THEN '목걸이'
                WHEN I.category_id = 3 THEN '안경'
                WHEN I.category_id = 4 THEN '가방'
            END AS item_type,
            R.content AS reply_content,
            RM.nickname AS reply_nickname,
            TO_CHAR(R.created_at, 'YYYY-MM-DD') AS reply_created_at
        FROM
            POST P
        LEFT JOIN MEMBER M                  ON P.member_id = M.member_id
        LEFT JOIN COORDINATION CO           ON P.coordination_id = CO.coordination_id
        LEFT JOIN COORDINATION_ITEM COI     ON CO.coordination_id = COI.coordination_id
        LEFT JOIN ITEM_OPTION IO            ON COI.item_option_id = IO.item_option_id
        LEFT JOIN ITEM I                    ON IO.item_id = I.item_id
        LEFT JOIN SHOP S                    ON I.shop_id = S.shop_id
        LEFT JOIN REPLY R                   ON P.post_id = R.post_id
        LEFT JOIN MEMBER RM                 ON R.member_id = RM.member_id
        WHERE
            P.deleted_at IS NULL
          AND
            P.post_id = #{postId}
          AND
            R.deleted_at IS NULL
        ORDER BY
            R.created_at DESC
    </select>

    <!-- CoordinationResponseDTO, CoordinationItemDTO 간의 매핑을 정의하는 ResultMap -->
    <resultMap id="CoordinationResultMap" type="com.oasis.hworld.contest.dto.CoordinationResponseDTO">
        <id column="coordination_id" property="coordinationId"/>
        <result column="title" property="title"/>
        <result column="coordination_image_url" property="coordinationImageUrl"/>
        <collection property="itemList"
                    ofType="com.oasis.hworld.contest.dto.CoordinationItemDTO"
                    javaType="ArrayList">
            <result column="item_name" property="itemName"/>
            <result column="item_image_url" property="itemImageUrl"/>
            <result column="item_type" property="itemType"/>
        </collection>
    </resultMap>

    <!-- 회원 ID를 통한 코디 조회   -->
    <select id="selectCoordinationListByMemberId" resultMap="CoordinationResultMap">
        SELECT
            CO.coordination_id,
            CO.title,
            CO.image_url    AS coordination_image_url,
            I.name          AS item_name,
            I.image_url     AS item_image_url,
            CASE
                WHEN I.category_id = 1 THEN '모자'
                WHEN I.category_id = 2 THEN '목걸이'
                WHEN I.category_id = 3 THEN '안경'
                WHEN I.category_id = 4 THEN '가방'
            END AS item_type
        FROM
            COORDINATION CO
        LEFT JOIN COORDINATION_ITEM COI ON CO.coordination_id = COI.coordination_id AND CO.member_id = #{memberId}
        LEFT JOIN ITEM_OPTION IO        ON COI.item_option_id = IO.item_option_id
        LEFT JOIN ITEM I                ON IO.item_id = I.item_id
        LEFT JOIN SHOP S                ON I.shop_id = S.shop_id
    </select>
    <!-- 회원 ID와 코디 ID를 통한 게시글 ID 조회   -->
    <select id="selectContestPostByMemberIdAndCoordinationId">
        SELECT
            P.post_id
        FROM
            POST P
        WHERE
            P.member_id = #{memberId} AND P.coordination_id = #{coordinationId}
    </select>

    <!-- 진행중인 콘테스트 게시글 등록 -->
    <insert id="insertContestPost" parameterType="map">
        INSERT INTO POST(
            post_id,
            member_id,
            contest_id,
            coordination_id,
            title,
            created_at
        )
        VALUES (
            SEQ_POST.NEXTVAL,
            #{memberId},
            (SELECT
                 C.contest_id
            FROM
                CONTEST C
            WHERE sysdate BETWEEN C.start_date AND C.end_date),
            #{postRequestDTO.coordinationId},
            #{postRequestDTO.title},
            sysdate
        )
    </insert>

    <!-- 콘테스트 게시글 댓글 등록 -->
    <insert id="insertReply" parameterType="map">
        INSERT INTO REPLY(
            reply_id,
            post_id,
            member_id,
            content,
            created_at
        )
        VALUES (
            SEQ_REPLY.NEXTVAL,
            #{replyRequestDTO.postId},
            #{memberId},
            #{replyRequestDTO.content},
            sysdate
        )
    </insert>

    <!-- 콘테스트 게시글 댓글 삭제 -->
    <delete id="deleteReply">
        DELETE
        FROM
            REPLY
        WHERE reply_id = #{replyId} AND member_id = #{memberId}
    </delete>

    <!-- 회원 ID와 게시글 ID를 통한 콘테스트 게시글 추천 조회 -->
    <select id="selectRecommendByMemberIdAndPostId">
        SELECT RE.member_id, RE.post_id
        FROM RECOMMEND RE
        WHERE RE.member_id = #{memberId} AND RE.post_id = #{postId}
    </select>

    <!-- 콘테스트 게시글 추천 등록 및 추천수 업데이트 -->
    <!-- 추천 등록 및 게시글 추천수 업데이트를 처리하는 저장 프로시저 -->
    <select id="insertRecommendAndUpdateRecommendCount" parameterType="map" statementType="CALLABLE">
        {CALL insert_recommend_and_update_recommend_count(
                #{memberId, mode=IN, jdbcType=INTEGER},
                #{postId, mode=IN, jdbcType=INTEGER},
                #{totalRowsAffected, mode=OUT, jdbcType=INTEGER}
              )}
    </select>

    <!-- 콘테스트 게시글 추천 삭제 및 추천수 업데이트 -->
    <!-- 추천 삭제 및 게시글 추천수 감소를 처리하는 저장 프로시저 -->
    <select id="deleteRecommendAndUpdateRecommendCount" parameterType="map" statementType="CALLABLE">
        {CALL delete_recommend_and_update_recommend_count(
        #{memberId, mode=IN, jdbcType=INTEGER},
        #{postId, mode=IN, jdbcType=INTEGER},
        #{totalRowsAffected, mode=OUT, jdbcType=INTEGER}
        )}
    </select>

    <!-- 콘테스트 댓글수 업데이트 (증가) -->
    <update id="updateIncreaseReplyCount">
        UPDATE POST
        SET reply_count = reply_count + 1
        WHERE post_id = #{postId}
    </update>

    <!-- 콘테스트 댓글수 업데이트 (감소) -->
    <update id="updateDecreaseReplyCount">
        UPDATE POST
        SET reply_count = reply_count - 1
        WHERE post_id = #{postId}
    </update>
</mapper>