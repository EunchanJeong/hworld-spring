<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
* 회원 Mybatis mapper xml
* @author 김지현
* @since 2024.08.31
* @version 1.0
*
* <pre>
* 수정일        	수정자        수정내용
* ==========  =========    =======================
* 2024.08.31  	김지현        최초 생성
* 2024.09.01    김지현        로그인 ID로 회원 조회 추가
* </pre>
-->
<mapper namespace="com.oasis.hworld.member.mapper.MemberMapper">
    <!-- 회원 추가 -->
    <insert id="insertMember">
        <![CDATA[
            INSERT INTO MEMBER (member_id, login_id, password, nickname, gender, birthdate)
            VALUES (SEQ_MEMBER.NEXTVAL, #{loginId}, #{password}, #{nickname}, #{gender}, TO_DATE(TO_CHAR(#{birthdate}, 'YYYY-MM-DD'), 'YYYY-MM-DD'))
        ]]>
    </insert>

    <!-- 로그인 ID로 회원 수 조회 -->
    <select id="selectMemberCountByLoginId">
        <![CDATA[
            SELECT count(login_id)
            FROM MEMBER
            WHERE login_id = #{loginId} AND deleted_at IS NULL
        ]]>
    </select>

    <!-- 닉네임으로 회원 수 조회 -->
    <select id="selectMemberCountByNickname">
        <![CDATA[
            SELECT count(nickname)
            FROM MEMBER
            WHERE nickname = #{nickname} AND deleted_at IS NULL
        ]]>
    </select>

    <!-- 로그인 ID로 회원 조회 -->
    <select id="selectMemberByLoginId">
        <![CDATA[
            SELECT member_id, login_id, password, nickname, point, gender, birthDate, created_at, deleted_at
            FROM MEMBER
            WHERE login_id = #{loginId} AND deleted_at IS NULL
        ]]>
    </select>

    <!-- 회원 ID로 포인트 내역 조회 -->
    <select id="selectPointHistoryByMemberId">
        <![CDATA[
            SELECT
                CASE
                   WHEN type = 1 THEN '사용'
                   WHEN type = 2 THEN '적립'
                   END AS type,
                amount,
                description,
                TO_CHAR(created_at, 'YYYY-MM-DD HH24:MI:SS') AS created_at
            FROM POINT_HISTORY
            WHERE member_id = #{memberId}
        ]]>
    </select>

    <!-- 회원 ID로 게시글 목록 조회 -->
    <select id="selectPostByMemberId">
        SELECT
            P.post_id,
            C.image_url,
            P.like_count,
            COUNT(reply_id) AS reply_count,
            P.rank,
            P.created_at
        FROM POST P
        LEFT JOIN COORDINATION C
            ON P.coordination_id = C.coordination_id
        LEFT JOIN REPLY R
            ON P.post_id = R.post_id
            AND R.deleted_at IS NULL
        WHERE P.deleted_at IS NULL
          AND P.member_id = #{memberId}
        GROUP BY
            P.post_id,
            C.image_url,
            P.like_count,
            P.rank,
            P.created_at
        ORDER BY
            <if test="orderBy == 'latest'">
                P.created_at DESC
            </if>
            <if test="orderBy == 'recommend'">
                P.like_count DESC
            </if>
    </select>

    <!-- 회원 ID로 코디 목록 조회 -->
    <select id="selectCoordinationByMemberId">
        <![CDATA[
            SELECT coordination_id, title, image_url
            FROM COORDINATION
            WHERE member_id = #{memberId}
        ]]>
    </select>

    <!-- 코디 ID로 아이템 목록 조회 -->
    <select id="selectCoordinationItemByCoordinationId">
        <![CDATA[
            SELECT CI.category_id,
                   IO.item_id,
                   I.image_url,
                   I.detail_image_url
            FROM COORDINATION_ITEM CI
            LEFT JOIN ITEM_OPTION IO    ON CI.item_option_id = IO.item_option_id
            LEFT JOIN ITEM I            ON IO.item_id = I.item_id
            WHERE CI.coordination_id = #{coordinationId}
        ]]>
    </select>
</mapper>