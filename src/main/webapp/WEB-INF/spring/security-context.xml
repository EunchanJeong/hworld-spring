<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xsi:schemaLocation="http://www.springframework.org/schema/security
           http://www.springframework.org/schema/security/spring-security.xsd
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!-- JWT Token Provider -->
    <bean id="jwtTokenProvider" class="com.oasis.hworld.security.jwt.JwtTokenProvider">
        <property name="tokenSecretKey" value="${TOKEN_SECRET_KEY}" />
    </bean>

    <!-- JWT Authentication Filter -->
    <bean id="jwtAuthenticationFilter"
          class="com.oasis.hworld.security.jwt.JwtAuthenticationFilter">
        <constructor-arg ref="jwtTokenProvider" />
    </bean>

    <!-- BCrypt Password Encoder -->
    <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />

    <!-- CustomUserDetailsService -->
    <bean id="customUserDetailsService" class="com.oasis.hworld.security.service.CustomUserDetailsService" />

    <security:http>
        <security:csrf disabled="true"/>

        <!-- JwtAuthenticationFilter를 UsernamePasswordAuthenticationFilter 이전에 등록 -->
        <security:custom-filter ref="jwtAuthenticationFilter" before="FORM_LOGIN_FILTER"/>

        <!-- 모든 URL에 대해 접근 허용 -->
        <security:intercept-url pattern="/**" access="permitAll" />


<!--        <security:intercept-url pattern="/members/login"-->
<!--                                access="permitAll" />-->

<!--        <security:intercept-url pattern="/members/sign-up"-->
<!--                                access="permitAll" />-->

        <security:form-login/>
    </security:http>

    <security:authentication-manager id="authenticationManager">
        <security:authentication-provider user-service-ref="customUserDetailsService">
            <security:password-encoder ref="passwordEncoder" />
        </security:authentication-provider>
    </security:authentication-manager>
</beans>